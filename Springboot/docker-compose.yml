services:
  spring-back-end-1:
    container_name: "spring-back-end-1"
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: springbackend.local
    depends_on:
      - mysql-container
      - rabbitmq-container

  spring-rabbit:
    container_name: "spring-rabbit"
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    environment:
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: springbackend.local
    depends_on:
      - mysql-container
      - rabbitmq-container

  spring-kafka-consumer:
    container_name: "spring-kafka-consumer"
    build:
      context: ./kafka
      dockerfile: Dockerfile
    environment:
      VIRTUAL_PORT: 80
      VIRTUAL_HOST: springbackend.local
    depends_on:
      - mysql-container

  mysql-container:
    image: mysql:8.3.0
    container_name: 'mysql-container'
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: employee_management_system
      MYSQL_ROOT_PASSWORD: root

  rabbitmq-container:
    image: rabbitmq:3.10.5-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  loadbalancer:
    image: nginx:latest
    container_name: 'loadbalancer'
    volumes:
      - "./confd:/etc/nginx/conf.d"
    ports:
      - 80:80
    environment:
      DEFAULT_HOST: springbackend.local
    depends_on:
      - spring-back-end-1

#  kafka:
#    image: wurstmeister/kafka
#    container_name: 'kafka'
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "test_topic:1:3"
#      KAFKA_ADVERTISED_HOST_NAME: kafka
#    depends_on:
#      - zookeeper
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: 'zookeeper'
#    ports:
#      - 2181:2181

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test_topic:1:1"
      KAFKA_MESSAGE_MAX_BYTES: 2097152

volumes:
  dbdata:

networks:
  rabbitmq_network:
    driver: bridge