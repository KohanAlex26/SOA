@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(user, "User", "People that need information about products/orders")
Container(WebServer, "Web Server", "Nginx", "Exposes secured REST services and distributes traffic across multiple servers")
Container(mainServer1, "Main Server instance 1", "Spring Boot", "Handles specific business logic or functionality")
Container(mainServer2, "Main Server instance 2", "Spring Boot", "Handles specific business logic or functionality")
Container(rabbitmqServer, "Message Broker Server", "RabbitMQ-Springboot", "Facilitates communication between components")
Container(rabbitmq, "Message Broker", "RabbitMQ", "Facilitates communication between components")
Container(kafkaServer, "Event Streaming Server", "Kafka-Springboot", "Facilitates event streaming between components")
Container(kafka, "Event Streaming", "Kafka", "Facilitates event streaming between components")
Container(faas, "Function as a Service", "", "Executes serverless functions")
Container(frontEndApp, "Micro Frontend/Web App", "React", "Composed of multiple independent frontend modules")
ContainerDb(dbContainer, "Database", "MySQL", "Stores and manages data")
Container(docker, "Container Orchestration", "Docker", "Manages and orchestrates containers")

Rel(user, docker, "Uses", "https")
Rel(WebServer, mainServer1, "Uses", "")
Rel(WebServer, mainServer2, "Uses", "")
Rel(frontEndApp, WebServer, "Consumes", "")
Rel(mainServer1, faas, "Triggers", "")
Rel(mainServer2, faas, "Triggers", "")
Rel(WebServer, frontEndApp, "Manages", "")
Rel(docker, WebServer, "Manages", "")
Rel(docker, kafkaServer, "Manages", "")
Rel(docker, frontEndApp, "Manages", "")
Rel(docker, rabbitmqServer, "Manages", "")
Rel(docker, dbContainer, "Manages", "")
Rel(mainServer1, dbContainer, "Uses", "")
Rel(mainServer2, dbContainer, "Uses", "")
Rel(rabbitmqServer, dbContainer, "Uses", "")
Rel(rabbitmqServer, rabbitmq, "Uses", "")
Rel(kafkaServer, dbContainer, "Uses", "")
Rel(kafkaServer, kafka, "Uses", "")
Rel(rabbitmqServer, mainServer1, "Communicates with", "")
Rel(rabbitmqServer, mainServer2, "Communicates with", "")
Rel(kafkaServer, mainServer1, "Communicates with", "")
Rel(kafkaServer, mainServer2, "Communicates with", "")
@enduml
